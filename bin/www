#!/usr/bin/env node

/**
 * Web server Starter script
 */
"use strict"

//module dependencies.
const app = require('../app')
const config = require('../config/server')
const debug = require("debug")("express:server")
const http = require("http")

//get port from environment and store in Express.
let port = config.port
app.set("port", port)

//create http server
let server = http.createServer(app)

//listen on provided ports
server.listen(port)

//add error handler
server.on("error", onError)

//start listening on port
server.on("listening", onListening)

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
    if (error.syscall !== "listen") {
      throw error;
    }
  
    let bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  
    // handle specific listen errors with friendly messages
    switch (error.code) {
      case "EACCES":
        console.error(bind + " requires elevated privileges");
        process.exit(1);
        break;
      case "EADDRINUSE":
        console.error(bind + " is already in use");
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

  /**
  * Event listener for HTTP server "listening" event.
  */
 function onListening() {
   let addr = server.address();
   let bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
   console.log(`[INFO] Listening on ${bind}`);
 }